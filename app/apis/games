#!/bin/bash

[ -x "../utils.sh" ] && source "../utils.sh"

if [ "${REQUEST_METHOD}" == 'GET' ]; then

  GAME_ID="$(get_game_id_from_uri "${REQUEST_URI}")"
  if ! is_game_id_pattern "${GAME_ID}"; then
    echo 'Status: 404'
    echo ''
    jq -nrc '{error_type: "param", error_code: 0}'
    exit -1
  fi

  QUERY_STAT="SELECT game_state FROM games WHERE games.id = ${GAME_ID};"
  QUERIED_RESULT="$(sqlite3 -json "${SQLITE3_FILE}" "${QUERY_STAT}")"
  SQL_RESULT="$?"

  if [ "${SQL_RESULT}" != '0' ]; then
    echo 'Status: 400'
    echo ''
    echo "${SQL_RESULT}" | jq -rc '{error_type: "sqlite", error_code: .}'
    exit -1
  fi

  REQUEST_QUERY_I="$(find_uri_query "${REQUEST_URI}" 'i')"
  if ! is_game_global_counter_pattern "${REQUEST_QUERY_I}"; then
    echo 'Status: 400'
    echo ''
    jq -nrc '{error_type: "query", error_code: 0}'
    exit -1
  fi

  MATCHED_GAME_STATE="$(echo "${QUERIED_RESULT}" | jq -cr 'first | .game_state')"
  CURRENT_I="$(get_game_global_counter "${MATCHED_GAME_STATE}")"

  if [ "${CURRENT_I}" -le "${REQUEST_QUERY_I}" ]; then
    # NOTE: timeout & race mechanism
    sleep 20 &
    SLEEP_PID=$!
    trap "kill ${SLGAME_STATEEEP_PID}" 'SIGRTMIN+2'
    wait "${SLEEP_PID}"
  else
    RUNNING_GAME_CGI_PIDS=("$(ps a | grep '/bin/bash /app/apis/games' | cut -d' ' -f 1)")
    for RUNNING_GAME_CGI_PID in "${RUNNING_GAME_CGI_PIDS[@]}"; do
      if [ -n "${RUNNING_GAME_CGI_PID}" ]; then
        kill -s 'SIGRTMIN+2' "${RUNNING_GAME_CGI_PID}"
      fi
    done
  fi

  echo 'Status: 200'
  echo ''
  # TODO: settle step will not hide
  transform_game_state_to_player "${MATCHED_GAME_STATE}"
  exit 0
fi

if [ "${REQUEST_METHOD}" == 'POST' ]; then

  IFS='' read -r -N "${CONTENT_LENGTH}" REQUEST_PAYLOAD </dev/stdin

  ROOM_ID="$(echo "${REQUEST_PAYLOAD}" | jq -cr '.roomId')"
  GAME_STATE="$(init_game "${REQUEST_PAYLOAD}")"
  INSERT_STAT="INSERT INTO games (room_id, game_state) VALUES ('${ROOM_ID}', '${GAME_STATE}');"
  sqlite3 "${SQLITE3_FILE}" "${INSERT_STAT}"
  SQL_RESULT="$?"

  if [ "${SQL_RESULT}" != '0' ]; then
    echo 'Status: 400'
    echo ''
    echo "${SQL_RESULT}" | jq -rc '{error_type: "sqlite", error_code: .}'
    exit -1
  fi

  INSERTED_ROW_ID="$(
    sqlite3 "${SQLITE3_FILE}" -json "SELECT * from games WHERE room_id='${ROOM_ID}';" | jq -rc 'first | .id'
  )"
  if [ -z INSERTED_ROW_ID ]; then
    echo 'Status: 404'
    echo ''
    jq -nrc '{error_type: "sqlite", error_code: -1}'
    exit -2
  fi

  echo 'Status: 200'
  echo ''
  echo "https://example.com/view/games/${INSERTED_ROW_ID}" | jq -crR '{url: .}'
  exit 0
fi

echo 'Status: 405'
echo ''
jq -nrc '{error_type: "http", error_code: 405}'
exit 0
